{"version":3,"sources":["helpers/react/State.js","modules/_Mqtt.js","App.js","index.js"],"names":["State","defaultValue","useState","state","setState","r_state","useRef","this","useEffect","current","get","set","value","Mqtt","url","websocket","ssl","connect","a","Promise","resolve","client","mqtt","on","receive","console","log","subscribe","topic","callback","base","subscriptions","function","msg","_topic","send","publish","id","uuidv4","prefix","Room","script_id","rooms","room","room_url","deleteRoom","useCallback","fetch","window","_url","_rooms","restartRoom","openCombo","open","editor","monitor","roles","update","role_url","new_state","error","Object","entries","forEach","message","card","JSON","parse","status","e","ping","className","onClick","sort","b","role_id","map","role","Role","r_url","openLink","copyLink","copy","target","innerHTML","setTimeout","play","style","border","color","type","text","App","useParams","initialized","setMqtt","_Mqtt","location","protocol","indexOf","_mqtt","json","addRoom","isDev","href","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.d2c37a4d.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nconst State = function (defaultValue) {\r\n    const [state, setState] = useState(defaultValue);\r\n    const r_state = useRef(defaultValue);\r\n\r\n    this.state = state;\r\n\r\n    useEffect(() => {\r\n        if (state === r_state.current)\r\n            this.state = state;\r\n\r\n    }, [state])\r\n\r\n    this.get = () => r_state.current\r\n\r\n    this.set = (value) => {\r\n        r_state.current = value;\r\n        setState(value);\r\n        this.state = r_state.current;\r\n    }\r\n}\r\n\r\nexport default State","import mqtt from \"mqtt\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class Mqtt {\r\n    constructor(url, websocket = false, ssl = false) {\r\n        let id = uuidv4();\r\n        console.log(id);\r\n        this.subscriptions = {};\r\n        this.base = \"\";\r\n        let prefix = websocket ? ssl ? 'wss' : 'ws' : 'mqtt';\r\n        return this.connect(`${prefix}://${url}`);\r\n    }\r\n    connect = async (url) => {\r\n        return new Promise((resolve) => {\r\n            this.client = mqtt.connect(url);\r\n            this.client.on('message', this.receive)\r\n            this.client.on('disconnect', () => {\r\n                console.log('oops disconnected');\r\n            })\r\n            this.client.on('connect', () => {\r\n                console.log('connected');\r\n                resolve(this);\r\n            })\r\n        })\r\n    }\r\n\r\n    subscribe = (topic, callback) => {\r\n        this.client.subscribe(`${this.base}${topic}`);\r\n        this.subscriptions[topic] = { function: callback };\r\n    }\r\n    receive = (topic, msg) => {\r\n        for (let _topic in this.subscriptions) {\r\n            if (topic === `${this.base}${_topic}`) {\r\n                (this.subscriptions[_topic].function(msg));\r\n            }\r\n        }\r\n    }\r\n    send = (topic, msg) => {\r\n        this.client.publish(`${this.base}${topic}`, msg)\r\n    }\r\n}","import './App.css';\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport State from \"./helpers/react/State.js\";\n\nimport copy from 'copy-to-clipboard';\nimport _Mqtt from \"./modules/_Mqtt.js\";\n\n\n\nfunction App() {\n  let { script_id } = useParams();\n\n  // let [rooms, rooms.set] = useState({});\n  const rooms = new State({});\n  const initialized = new State(false);\n  const [mqtt, setMqtt] = new useState(false);\n\n\n  useEffect(async () => {\n    let _mqtt = await new _Mqtt(window._url.mqtt, true, window.location.protocol.indexOf('https') != -1);\n    console.log('connect???', _mqtt);\n    setMqtt(_mqtt);\n  }, [])\n  /* const [rooms, rooms.set] = useState({});\n  let r_rooms = useRef({}); */\n  // get active games\n\n  /*   useEffect(() => {\n      console.log('rooms changed ', rooms);\n    }, [rooms.state]) */\n\n  useEffect(async () => {\n    if (!mqtt) return;\n\n    if (!initialized.state) {\n      initialized.set(true);\n      let _rooms = await fetch(`${window._url.fetch}/api/room/getRooms/${script_id}`);\n      _rooms = await _rooms.json();\n      if (!_rooms) return;\n      Object.entries(_rooms).forEach(([room_url, room]) => {\n        //console.log(room);\n        // monitor({ room_url, roles: room.roles });\n      })\n\n      mqtt.subscribe(`/createRoom/${script_id}`, (message, topic) => {\n        let { room_url, roles, script_id } = JSON.parse(message);\n        console.log(`/createRoom/${script_id}`, room_url, roles, script_id)\n\n        addRoom({ room_url, roles, script_id });\n      });\n\n      rooms.set(_rooms);\n    }\n  }, [script_id, rooms, mqtt])\n\n  const addRoom = useCallback(({ room_url, roles, script_id }) => {\n    let _rooms = { ...rooms.get() };\n    console.log(_rooms);\n\n    rooms.set({ ..._rooms, [room_url]: { roles, script_id } });\n  }, [rooms.state])\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      {\n        mqtt ?\n          Object.entries(rooms.state).map(([room_url, room]) =>\n            <Room mqtt={mqtt} script_id={script_id} rooms={rooms} key={room_url} room={room} room_url={room_url}></Room>\n          ) : null\n      }\n    </div>\n  );\n}\n\nfunction Room({ mqtt, script_id, rooms, room, room_url }) {\n  const deleteRoom = useCallback(async () => {\n    let response = await fetch(`${window._url.fetch}/api/room/delete/${room_url}`);\n    if (!response) return;\n    let _rooms = { ...rooms.get() };\n    delete _rooms[room_url];\n    rooms.set(_rooms);\n\n  }, [rooms.state])\n\n  const restartRoom = useCallback(async () => {\n    let response = await fetch(`${window._url.fetch}/api/room/restart/${room_url}`);\n    if (!response) return;\n  }, [rooms.state])\n\n\n  const openCombo = useCallback(() => {\n    window.open(`${window._url.editor}/test/${room_url}`)\n  }, [])\n\n  var monitor = useCallback(({ room_url, roles }) => {\n    const update = ({ room_url, role_url, state }) => {\n      let _rooms = rooms.get();\n      if (!_rooms[room_url]) {\n        console.error(_rooms, room_url, role_url, state);\n        return;\n      }\n\n\n      const roles = _rooms[room_url].roles;\n      // const role = roles[role_url];\n\n\n      let new_state = {\n        ..._rooms,\n        [room_url]: {\n          ..._rooms[room_url],\n          roles: {\n            ...roles, [role_url]:\n            {\n              ..._rooms[room_url].roles[role_url],\n              ...state\n            }\n          }\n        }\n      }\n      rooms.set(new_state)\n    }\n    if (!roles) return;\n    Object.entries(roles).forEach(([role_url, role]) => {\n      if (!role) return;\n      mqtt.subscribe(`/monitor/${room_url}/${role_url}/card`, (message, topic) => {\n        let card = JSON.parse(message);\n        update({ room_url, role_url, state: { card } })\n      })\n      mqtt.subscribe(`/monitor/${room_url}/${role_url}/status`, (message, topic) => {\n        try {\n          let status = JSON.parse(message);\n          console.log(role_url, status);\n          update({ room_url, role_url, state: status })\n        } catch (e) {\n          console.error(e, message);\n        }\n      })\n      mqtt.subscribe(`/monitor/${room_url}/${role_url}/ping`, (message, topic) => {\n        try {\n          const ping = JSON.parse(message);\n          console.log('receive ping');\n          update({ room_url, role_url, state: ping })\n        } catch (e) {\n          console.error(e, message);\n        }\n\n      })\n    })\n\n\n\n\n    mqtt.subscribe(`/${room_url}/#`, (message, topic) => {\n      message = JSON.parse(message);\n    })\n  }, [rooms.state]);\n\n  useEffect(() => {\n    monitor({ room_url, roles: room.roles })\n  }, [])\n\n  return (\n    <div className='room'>\n      <div className='top'><h1>room {script_id} {room_url} </h1> <button onClick={deleteRoom}>delete</button><button onClick={restartRoom}>restart</button><button onClick={openCombo}>combo</button></div>\n\n      <div className='roles'>\n        {\n          room && room.roles ?\n            Object.entries(room.roles).sort((a, b) => a[1].role_id - b[1].role_id).map(([role_url, role]) => {\n              //console.log('entries rooom.roles', room, role_url, role);\n              return <Role room_url={room_url} key={role_url} role_url={role_url} role={role}></Role>\n\n            }\n            ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\n// create active game and add to visualization\nfunction Role({ room_url, role, role_url }) {\n  let r_url = useRef();\n\n  const openLink = useCallback(() => {\n    window.open(r_url.current)\n  }, [])\n\n  const copyLink = useCallback((e) => {\n    copy(r_url.current);\n    e.target.innerHTML = 'copied!';\n    setTimeout(() => { e.target.innerHTML = 'copy' }, 1000);\n  }, [])\n\n  useEffect(() => {\n    console.log('room_url is ', room_url);\n    r_url.current = `${window._url.play}/${room_url}${role_url}`;\n  }, [])\n\n  return <div className='role' style={{ border: `1px solid ${role.status === 'connected' ? 'green' : role.status === 'finished' ? 'blue' : 'red'}` }}>\n    {role ? <>\n      <div className='marginBottom'>\n        <div className='row'><label>role</label><span>{role.role_id}</span></div>\n        <div className='row'><label>status</label> <span style={{ color: role.status === 'connected' ? 'green' : role.status === 'finished' ? 'blue' : 'red' }}>{role.status ? role.status : 'never connected'}</span></div>\n        {\n          role.status === 'connected' ?\n            <div className='row'>\n              <label>ping</label>\n              <span style={{ color: role.ping === 'error' ? 'red' : 'black' }}>{role.ping ? `${role.ping}ms` : null}</span>\n            </div> : null\n        }\n      </div>\n\n      <div className='marginBottom instruction'>\n        <div className='row'><label>card</label></div>\n        <div className='row'><label className='margin'>type</label> {role.card ? <span className='italic'>{role.card.type}</span> : null}</div>\n        <div className='row'><label className='margin'>text</label> {role.card && role.card.type !== 'video' ? <span>{role.card.text}</span> : null}</div>\n      </div>\n\n      <div className='flex'><button onClick={openLink}>open </button><button onClick={copyLink}>copy</button>{/* <button>qr</button> */}</div>\n\n\n    </> : null\n    }\n  </div >\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconst isDev = window.location.href.indexOf('localhost') != -1;\n\nwindow._url = {\n  mqtt: isDev ? \"localhost:8883\" : \"socket.datingproject.net/mqtt\",\n  editor: isDev ? \"http://localhost:3000\" : \"https://script.datingproject.net\",\n  fetch: isDev ? \"http://localhost:8080\" : \"https://fetch.datingproject.net\",\n  play: isDev ? \"http://localhost:3001\" : \"https://play.datingproject.net\",\n  monitor: isDev ? \"http://localhost:3004\" : \"https://monitor.datingproject.net\",\n}\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/:script_id\">\n          <App />\n          <div className=\"background\"><div ></div></div>\n        </Route>\n      </Switch>\n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}