{"version":3,"sources":["helpers/react/State.js","App.js","index.js","modules/_Mqtt.js"],"names":["State","defaultValue","useState","state","setState","r_state","useRef","this","useEffect","current","get","set","value","Room","_mqtt","script_id","rooms","room","room_url","deleteRoom","useCallback","a","fetch","window","_url","_rooms","restartRoom","openCombo","open","editor","monitor","roles","update","role_url","new_state","console","error","Object","entries","forEach","subscribe","message","topic","card","JSON","parse","status","log","e","ping","className","onClick","sort","b","role_id","map","role","Role","r_url","openLink","copyLink","copy","target","innerHTML","setTimeout","play","style","border","color","type","text","App","useParams","initialized","json","addRoom","isDev","location","href","indexOf","mqtt","connect","url","websocket","ssl","Promise","resolve","client","on","receive","callback","base","subscriptions","function","msg","_topic","wildcard","split","send","publish","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.05333b83.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nconst State = function (defaultValue) {\r\n    const [state, setState] = useState(defaultValue);\r\n    const r_state = useRef(defaultValue);\r\n\r\n    this.state = state;\r\n\r\n    useEffect(() => {\r\n        if (state === r_state.current)\r\n            this.state = state;\r\n\r\n    }, [state])\r\n\r\n    this.get = () => r_state.current\r\n\r\n    this.set = (value) => {\r\n        r_state.current = value;\r\n        setState(value);\r\n        this.state = r_state.current;\r\n    }\r\n}\r\n\r\nexport default State","import './App.css';\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport State from \"./helpers/react/State.js\";\n\nimport copy from 'copy-to-clipboard';\n\n\n\nfunction App({ _mqtt }) {\n  let { script_id } = useParams();\n\n  // let [rooms, rooms.set] = useState({});\n  const rooms = new State({});\n  const initialized = new State(false);\n  /* const [rooms, rooms.set] = useState({});\n  let r_rooms = useRef({}); */\n  // get active games\n\n  /*   useEffect(() => {\n      console.log('rooms changed ', rooms);\n    }, [rooms.state]) */\n\n  useEffect(async () => {\n    if (!initialized.state) {\n      initialized.set(true);\n      let _rooms = await fetch(`${window._url.fetch}/api/room/getRooms/${script_id}`);\n      _rooms = await _rooms.json();\n      if (!_rooms) return;\n      Object.entries(_rooms).forEach(([room_url, room]) => {\n        //console.log(room);\n        // monitor({ room_url, roles: room.roles });\n      })\n\n      _mqtt.subscribe(`/createRoom/${script_id}`, (message, topic) => {\n        let { room_url, roles, script_id } = JSON.parse(message);\n        console.log(`/createRoom/${script_id}`, room_url, roles, script_id)\n\n        addRoom({ room_url, roles, script_id });\n      });\n\n      rooms.set(_rooms);\n    }\n  }, [script_id, rooms])\n\n  const addRoom = useCallback(({ room_url, roles, script_id }) => {\n    let _rooms = { ...rooms.get() };\n    console.log(_rooms);\n\n    rooms.set({ ..._rooms, [room_url]: { roles, script_id } });\n  }, [rooms.state])\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      {\n        Object.entries(rooms.state).map(([room_url, room]) =>\n          <Room _mqtt={_mqtt} script_id={script_id} rooms={rooms} key={room_url} room={room} room_url={room_url}></Room>\n        )\n      }\n    </div>\n  );\n}\n\nfunction Room({ _mqtt, script_id, rooms, room, room_url }) {\n  const deleteRoom = useCallback(async () => {\n    let response = await fetch(`${window._url.fetch}/api/room/delete/${room_url}`);\n    if (!response) return;\n    let _rooms = { ...rooms.get() };\n    delete _rooms[room_url];\n    rooms.set(_rooms);\n\n  }, [rooms.state])\n\n  const restartRoom = useCallback(async () => {\n    let response = await fetch(`${window._url.fetch}/api/room/restart/${room_url}`);\n    if (!response) return;\n  }, [rooms.state])\n\n\n  const openCombo = useCallback(() => {\n    window.open(`${window._url.editor}/test/${room_url}`)\n  }, [])\n\n  var monitor = useCallback(({ room_url, roles }) => {\n    const update = ({ room_url, role_url, state }) => {\n      let _rooms = rooms.get();\n      if (!_rooms[room_url]) {\n        console.error(_rooms, room_url, role_url, state);\n        return;\n      }\n\n\n      const roles = _rooms[room_url].roles;\n      // const role = roles[role_url];\n\n\n      let new_state = {\n        ..._rooms,\n        [room_url]: {\n          ..._rooms[room_url],\n          roles: {\n            ...roles, [role_url]:\n            {\n              ..._rooms[room_url].roles[role_url],\n              ...state\n            }\n          }\n        }\n      }\n      rooms.set(new_state)\n    }\n    if (!roles) return;\n    Object.entries(roles).forEach(([role_url, role]) => {\n      if (!role) return;\n      _mqtt.subscribe(`/monitor/${room_url}/${role_url}/card`, (message, topic) => {\n        let card = JSON.parse(message);\n        update({ room_url, role_url, state: { card } })\n      })\n      _mqtt.subscribe(`/monitor/${room_url}/${role_url}/status`, (message, topic) => {\n        try {\n          let status = JSON.parse(message);\n          console.log(role_url, status);\n          update({ room_url, role_url, state: status })\n        } catch (e) {\n          console.error(e, message);\n        }\n      })\n      _mqtt.subscribe(`/monitor/${room_url}/${role_url}/ping`, (message, topic) => {\n        try {\n          const ping = JSON.parse(message);\n          console.log('receive ping');\n          update({ room_url, role_url, state: ping })\n        } catch (e) {\n          console.error(e, message);\n        }\n\n      })\n    })\n\n\n\n\n    _mqtt.subscribe(`/${room_url}/#`, (message, topic) => {\n      message = JSON.parse(message);\n    })\n  }, [rooms.state]);\n\n  useEffect(() => {\n    monitor({ room_url, roles: room.roles })\n  }, [])\n\n  return (\n    <div className='room'>\n      <div className='top'><h1>room {script_id} {room_url} </h1> <button onClick={deleteRoom}>delete</button><button onClick={restartRoom}>restart</button><button onClick={openCombo}>combo</button></div>\n\n      <div className='roles'>\n        {\n          room && room.roles ?\n            Object.entries(room.roles).sort((a, b) => a[1].role_id - b[1].role_id).map(([role_url, role]) => {\n              //console.log('entries rooom.roles', room, role_url, role);\n              return <Role room_url={room_url} key={role_url} role_url={role_url} role={role}></Role>\n\n            }\n            ) : null\n        }\n      </div>\n    </div>\n  )\n}\n\n// create active game and add to visualization\nfunction Role({ room_url, role, role_url }) {\n  let r_url = useRef();\n\n  const openLink = useCallback(() => {\n    window.open(r_url.current)\n  }, [])\n\n  const copyLink = useCallback((e) => {\n    copy(r_url.current);\n    e.target.innerHTML = 'copied!';\n    setTimeout(() => { e.target.innerHTML = 'copy' }, 1000);\n  }, [])\n\n  useEffect(() => {\n    console.log('room_url is ', room_url);\n    r_url.current = `${window._url.play}/${room_url}${role_url}`;\n  }, [])\n\n  return <div className='role' style={{ border: `1px solid ${role.status === 'connected' ? 'green' : role.status === 'finished' ? 'blue' : 'red'}` }}>\n    {role ? <>\n      <div className='marginBottom'>\n        <div className='row'><label>role</label><span>{role.role_id}</span></div>\n        <div className='row'><label>status</label> <span style={{ color: role.status === 'connected' ? 'green' : role.status === 'finished' ? 'blue' : 'red' }}>{role.status ? role.status : 'never connected'}</span></div>\n        {\n          role.status === 'connected' ?\n            <div className='row'>\n              <label>ping</label>\n              <span style={{ color: role.ping === 'error' ? 'red' : 'black' }}>{role.ping ? `${role.ping}ms` : null}</span>\n            </div> : null\n        }\n      </div>\n\n      <div className='marginBottom instruction'>\n        <div className='row'><label>card</label></div>\n        <div className='row'><label className='margin'>type</label> {role.card ? <span className='italic'>{role.card.type}</span> : null}</div>\n        <div className='row'><label className='margin'>text</label> {role.card && role.card.type !== 'video' ? <span>{role.card.text}</span> : null}</div>\n      </div>\n\n      <div className='flex'><button onClick={openLink}>open </button><button onClick={copyLink}>copy</button>{/* <button>qr</button> */}</div>\n\n\n    </> : null\n    }\n  </div >\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport _Mqtt from \"./modules/_Mqtt.js\";\n\nconst isDev = window.location.href.indexOf('localhost') != -1;\n\nwindow._url = {\n  mqtt: isDev ? \"localhost:8883\" : \"socket.datingproject.net/mqtt\",\n  editor: isDev ? \"http://localhost:3000\" : \"https://script.datingproject.net/\",\n  fetch: isDev ? \"http://localhost:8080\" : \"https://fetch.datingproject.net\",\n  play: isDev ? \"http://localhost:3001\" : \"https://play.datingproject.net\",\n  monitor: isDev ? \"http://localhost:3004\" : \"https://monitor.datingproject.net\",\n}\n\n\nlet _mqtt = new _Mqtt();\n_mqtt.connect(window._url.mqtt);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/:script_id\">\n          <App _mqtt={_mqtt} />\n          <div className=\"background\"><div ></div></div>\n        </Route>\n      </Switch>\n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// const mqtt = require('mqtt');\r\nimport mqtt from 'mqtt';\r\n\r\nexport default class _Mqtt {\r\n    constructor() {\r\n        this.subscriptions = {};\r\n        this.base = \"\";\r\n    }\r\n    connect = async (url, websocket = false, ssl = false) => {\r\n        let prefix = websocket ? ssl ? 'wss' : 'ws' : 'mqtt';\r\n        url = `${prefix}://${url}`;\r\n        console.log(url);\r\n        return new Promise((resolve) => {\r\n            this.client = mqtt.connect(url);\r\n            this.client.on('message', this.receive)\r\n            this.client.on('disconnect', () => {\r\n                console.log('oops disconnected');\r\n            })\r\n            this.client.on('connect', () => {\r\n                console.log('connected');\r\n                resolve(this);\r\n            })\r\n        })\r\n    }\r\n\r\n    subscribe = (topic, callback) => {\r\n        this.client.subscribe(`${this.base}${topic}`);\r\n        this.subscriptions[topic] = { function: callback };\r\n    }\r\n    receive = (topic, msg) => {\r\n        for (let _topic in this.subscriptions) {\r\n            if (_topic.indexOf('#') != -1) {\r\n                let wildcard = _topic.split('#')[0];\r\n                if (topic.indexOf(wildcard) != -1) {\r\n                    this.subscriptions[_topic].function(msg, topic);\r\n                }\r\n            } else {\r\n                if (topic === `${this.base}${_topic}`) {\r\n                    (this.subscriptions[_topic].function(msg, topic));\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n    send = (topic, msg) => {\r\n        this.client.publish(`${this.base}${topic}`, msg)\r\n    }\r\n}\r\n\r\n// module.exports = _Mqtt;"],"sourceRoot":""}