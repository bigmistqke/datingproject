{"version":3,"sources":["helpers/react/State.js","App.js","index.js","modules/_Mqtt.js"],"names":["State","defaultValue","useState","state","setState","r_state","useRef","this","useEffect","current","get","set","value","Role","room_url","role","role_url","r_url","openLink","useCallback","window","open","copyLink","e","copy","target","innerHTML","setTimeout","console","log","_url","play","className","style","border","status","role_id","color","ping","card","class","type","text","onClick","App","_mqtt","script_id","useParams","rooms","initialized","a","fetch","_rooms","json","Object","entries","forEach","subscribe","message","topic","JSON","parse","roles","addRoom","Room","room","deleteRoom","restartRoom","openCombo","editor","monitor","update","new_state","error","sort","b","map","isDev","location","href","indexOf","mqtt","connect","url","websocket","ssl","Promise","resolve","client","on","receive","callback","base","subscriptions","function","msg","_topic","wildcard","split","send","publish","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.6e175a71.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nconst State = function (defaultValue) {\r\n    const [state, setState] = useState(defaultValue);\r\n    const r_state = useRef(defaultValue);\r\n\r\n    this.state = state;\r\n\r\n    useEffect(() => {\r\n        if (state === r_state.current)\r\n            this.state = state;\r\n\r\n    }, [state])\r\n\r\n    this.get = () => r_state.current\r\n\r\n    this.set = (value) => {\r\n        r_state.current = value;\r\n        setState(value);\r\n        this.state = r_state.current;\r\n    }\r\n}\r\n\r\nexport default State","import './App.css';\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport State from \"./helpers/react/State.js\";\n\nimport copy from 'copy-to-clipboard';\n\n\n\nfunction App({ _mqtt }) {\n  let { script_id } = useParams();\n\n  // let [rooms, rooms.set] = useState({});\n  const rooms = new State({});\n  const initialized = new State(false);\n  /* const [rooms, rooms.set] = useState({});\n  let r_rooms = useRef({}); */\n  // get active games\n\n  /*   useEffect(() => {\n      console.log('rooms changed ', rooms);\n    }, [rooms.state]) */\n\n  useEffect(async () => {\n    if (!initialized.state) {\n      initialized.set(true);\n      let _rooms = await fetch(`${window._url.fetch}/api/room/getRooms/${script_id}`);\n      _rooms = await _rooms.json();\n      if (!_rooms) return;\n      Object.entries(_rooms).forEach(([room_url, room]) => {\n        //console.log(room);\n        // monitor({ room_url, roles: room.roles });\n      })\n\n      _mqtt.subscribe(`/createRoom/${script_id}`, (message, topic) => {\n        let { room_url, roles, script_id } = JSON.parse(message);\n        console.log(`/createRoom/${script_id}`, room_url, roles, script_id)\n\n        addRoom({ room_url, roles, script_id });\n      });\n\n      rooms.set(_rooms);\n    }\n  }, [script_id, rooms])\n\n  const addRoom = useCallback(({ room_url, roles, script_id }) => {\n    let _rooms = { ...rooms.get() };\n    console.log(_rooms);\n\n    rooms.set({ ..._rooms, [room_url]: { roles, script_id } });\n  }, [rooms.state])\n\n\n\n\n\n\n\n  function Room({ room, room_url }) {\n    const deleteRoom = useCallback(async () => {\n      let response = await fetch(`${window._url.fetch}/api/room/delete/${room_url}`);\n      if (!response) return;\n      let _rooms = { ...rooms.get() };\n      delete _rooms[room_url];\n      rooms.set(_rooms);\n\n    }, [rooms.state])\n\n    const restartRoom = useCallback(async () => {\n      let response = await fetch(`${window._url.fetch}/api/room/restart/${room_url}`);\n      if (!response) return;\n    }, [rooms.state])\n\n\n    const openCombo = useCallback(() => {\n      window.open(`${window._url.editor}/test/${room_url}`)\n    })\n\n    var monitor = useCallback(({ room_url, roles }) => {\n      const update = ({ room_url, role_url, state }) => {\n        let _rooms = rooms.get();\n        if (!_rooms[room_url]) {\n          console.error(_rooms, room_url, role_url, state);\n          return;\n        }\n\n\n        const roles = _rooms[room_url].roles;\n        const role = roles[role_url];\n\n\n        let new_state = {\n          ..._rooms,\n          [room_url]: {\n            ..._rooms[room_url],\n            roles: {\n              ...roles, [role_url]:\n              {\n                ..._rooms[room_url].roles[role_url],\n                ...state\n              }\n            }\n          }\n        }\n        rooms.set(new_state)\n      }\n      if (!roles) return;\n      Object.entries(roles).forEach(([role_url, role]) => {\n        if (!role) return;\n        _mqtt.subscribe(`/monitor/${room_url}/${role_url}/card`, (message, topic) => {\n          let card = JSON.parse(message);\n          update({ room_url, role_url, state: { card } })\n        })\n        _mqtt.subscribe(`/monitor/${room_url}/${role_url}/status`, (message, topic) => {\n          try {\n            let status = JSON.parse(message);\n            console.log(role_url, status);\n            update({ room_url, role_url, state: status })\n          } catch (e) {\n            console.error(e, message);\n          }\n        })\n        _mqtt.subscribe(`/monitor/${room_url}/${role_url}/ping`, (message, topic) => {\n          try {\n            const ping = JSON.parse(message);\n            console.log('receive ping');\n            update({ room_url, role_url, state: ping })\n          } catch (e) {\n            console.error(e, message);\n          }\n\n        })\n      })\n\n\n\n\n      _mqtt.subscribe(`/${room_url}/#`, (message, topic) => {\n        message = JSON.parse(message);\n      })\n    }, [rooms.state]);\n\n    useEffect(() => {\n      monitor({ room_url, roles: room.roles })\n    }, [])\n\n    return (\n      <div className='room'>\n        <div className='top'><h1>room {script_id} {room_url} </h1> <button onClick={deleteRoom}>delete</button><button onClick={restartRoom}>restart</button><button onClick={openCombo}>combo</button></div>\n\n        <div className='roles'>\n          {\n            room && room.roles ?\n              Object.entries(room.roles).sort((a, b) => a[1].role_id - b[1].role_id).map(([role_url, role]) => {\n                //console.log('entries rooom.roles', room, role_url, role);\n                return <Role room_url={room_url} key={role_url} role_url={role_url} role={role}></Role>\n\n              }\n              ) : null\n          }\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        Object.entries(rooms.state).map(([room_url, room]) =>\n          <Room key={room_url} room={room} room_url={room_url}></Room>\n        )\n      }\n    </div>\n  );\n}\n\n// create active game and add to visualization\nfunction Role({ room_url, role, role_url }) {\n  let r_url = useRef();\n\n  const openLink = useCallback(() => {\n    window.open(r_url.current)\n  }, [])\n\n  const copyLink = useCallback((e) => {\n    copy(r_url.current);\n    e.target.innerHTML = 'copied!';\n    setTimeout(() => { e.target.innerHTML = 'copy' }, 1000);\n  }, [])\n\n  useEffect(() => {\n    console.log('room_url is ', room_url);\n    r_url.current = `${window._url.play}/${room_url}${role_url}`;\n  }, [room_url, role_url])\n\n  return <div className='role' style={{ border: `1px solid ${role.status === 'connected' ? 'green' : role.status === 'finished' ? 'blue' : 'red'}` }}>\n    {role ? <>\n      <div className='marginBottom'>\n        <div className='row'><label>role</label><span>{role.role_id}</span></div>\n        <div className='row'><label>status</label> <span style={{ color: role.status === 'connected' ? 'green' : role.status === 'finished' ? 'blue' : 'red' }}>{role.status ? role.status : 'never connected'}</span></div>\n        {\n          role.status === 'connected' ?\n            <div className='row'>\n              <label>ping</label>\n              <span style={{ color: role.ping === 'error' ? 'red' : 'black' }}>{role.ping ? `${role.ping}ms` : null}</span>\n            </div> : null\n        }\n      </div>\n\n      <div className='marginBottom instruction'>\n        <div className='row'><label>card</label></div>\n        <div className='row'><label className='margin'>type</label> {role.card ? <span class='italic'>{role.card.type}</span> : null}</div>\n        <div className='row'><label className='margin'>text</label> {role.card && role.card.type !== 'video' ? <span>{role.card.text}</span> : null}</div>\n      </div>\n\n      <div className='flex'><button onClick={openLink}>open </button><button onClick={copyLink}>copy</button>{/* <button>qr</button> */}</div>\n\n\n    </> : null\n    }\n  </div >\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport _Mqtt from \"./modules/_Mqtt.js\";\n\nconst isDev = window.location.href.indexOf('localhost') != -1;\n\nwindow._url = {\n  mqtt: isDev ? \"localhost:8883\" : \"socket.datingproject.net/mqtt\",\n  editor: isDev ? \"http://localhost:3000\" : \"https://script.datingproject.net/\",\n  fetch: isDev ? \"http://localhost:8080\" : \"https://fetch.datingproject.net\",\n  play: isDev ? \"http://localhost:3001\" : \"https://play.datingproject.net\",\n  monitor: isDev ? \"http://localhost:3004\" : \"https://monitor.datingproject.net\",\n}\n\n\nlet _mqtt = new _Mqtt();\n_mqtt.connect(window._url.mqtt);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/:script_id\">\n          <App _mqtt={_mqtt} />\n          <div className=\"background\"><div ></div></div>\n        </Route>\n      </Switch>\n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// const mqtt = require('mqtt');\r\nimport mqtt from 'mqtt';\r\n\r\nexport default class _Mqtt {\r\n    constructor() {\r\n        this.subscriptions = {};\r\n        this.base = \"\";\r\n    }\r\n    connect = async (url, websocket = false, ssl = false) => {\r\n        let prefix = websocket ? ssl ? 'wss' : 'ws' : 'mqtt';\r\n        url = `${prefix}://${url}`;\r\n        console.log(url);\r\n        return new Promise((resolve) => {\r\n            this.client = mqtt.connect(url);\r\n            this.client.on('message', this.receive)\r\n            this.client.on('disconnect', () => {\r\n                console.log('oops disconnected');\r\n            })\r\n            this.client.on('connect', () => {\r\n                console.log('connected');\r\n                resolve(this);\r\n            })\r\n        })\r\n    }\r\n\r\n    subscribe = (topic, callback) => {\r\n        this.client.subscribe(`${this.base}${topic}`);\r\n        this.subscriptions[topic] = { function: callback };\r\n    }\r\n    receive = (topic, msg) => {\r\n        for (let _topic in this.subscriptions) {\r\n            if (_topic.indexOf('#') != -1) {\r\n                let wildcard = _topic.split('#')[0];\r\n                if (topic.indexOf(wildcard) != -1) {\r\n                    this.subscriptions[_topic].function(msg, topic);\r\n                }\r\n            } else {\r\n                if (topic === `${this.base}${_topic}`) {\r\n                    (this.subscriptions[_topic].function(msg, topic));\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n    send = (topic, msg) => {\r\n        this.client.publish(`${this.base}${topic}`, msg)\r\n    }\r\n}\r\n\r\n// module.exports = _Mqtt;"],"sourceRoot":""}